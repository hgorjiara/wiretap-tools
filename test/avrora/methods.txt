avrora/Main."<init>":()V
avrora/Main.main:([Ljava/lang/String;)V
avrora/Main.runAction:()V
avrora/Main.loadUserDefaults:()V
avrora/Main.loadFile:(Ljava/lang/String;)V
avrora/Main.buildHelpCategory:()Lcck/help/HelpCategory;
avrora/Main.printHelp:([Ljava/lang/String;)V
avrora/Main.buildAllCategories:()V
avrora/Main.printUsage:()V
avrora/Main.printFooter:()V
avrora/Main.printHelp:(Ljava/lang/String;)V
avrora/Main.banner:()V
avrora/Main.title:()V
avrora/Main.parseOptions:([Ljava/lang/String;)V
avrora/Main.loadProgram:([Ljava/lang/String;)Lavrora/core/Program;
avrora/Main.checkFilesExist:([Ljava/lang/String;)V
avrora/Main.checkFileExists:(Ljava/lang/String;)V
avrora/Main."<clinit>":()V
cck/util/Util$Error."<init>":(Ljava/lang/String;)V
cck/util/Util$Error."<init>":(Ljava/lang/String;Ljava/lang/String;)V
cck/util/Util$Error.getParam:()Ljava/lang/String;
cck/util/Util$Error.report:()V
cck/util/Options."<init>":()V
cck/util/Options.newOption:(Ljava/lang/String;ZLjava/lang/String;)Lcck/util/Option$Bool;
cck/util/Options.newOption:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$Str;
cck/util/Options.newOptionList:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$List;
cck/util/Options.newOption:(Ljava/lang/String;JLjava/lang/String;)Lcck/util/Option$Long;
cck/util/Options.newOption:(Ljava/lang/String;DLjava/lang/String;)Lcck/util/Option$Double;
cck/util/Options.newOption:(Ljava/lang/String;JJLjava/lang/String;)Lcck/util/Option$Interval;
cck/util/Options.getOptionValue:(Ljava/lang/String;)Ljava/lang/String;
cck/util/Options.getOptionValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
cck/util/Options.getOption:(Ljava/lang/String;)Lcck/util/Option;
cck/util/Options.hasOption:(Ljava/lang/String;)Z
cck/util/Options.getArguments:()[Ljava/lang/String;
cck/util/Options.parseCommandLine:([Ljava/lang/String;)V
cck/util/Options.parseOption:(Ljava/lang/String;)V
cck/util/Options.setOption:(Ljava/lang/String;Ljava/lang/String;)V
cck/util/Options.getAllOptions:()Ljava/util/Collection;
cck/util/Options.process:(Lcck/util/Options;)V
cck/util/Options.process:(Ljava/util/Properties;)V
cck/util/Options.loadFile:(Ljava/lang/String;)V
cck/util/Option."<init>":(Ljava/lang/String;Ljava/lang/String;)V
cck/util/Option.getName:()Ljava/lang/String;
cck/util/Option.set:(Ljava/lang/String;)V
cck/util/Option.stringValue:()Ljava/lang/String;
cck/util/Option.printHelp:()V
cck/util/Option.printDescription:()V
cck/util/Option.printHeader:(Ljava/lang/String;Ljava/lang/String;)V
cck/util/Option.parseError:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
cck/util/Option."<clinit>":()V
cck/util/Option$Str."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
cck/util/Option$Str.set:(Ljava/lang/String;)V
cck/util/Option$Str.setNewDefault:(Ljava/lang/String;)V
cck/util/Option$Str.get:()Ljava/lang/String;
cck/util/Option$Str.stringValue:()Ljava/lang/String;
cck/util/Option$Str.printHelp:()V
cck/util/Option$Str.isBlank:()Z
cck/util/Option$1."<init>":()V
cck/util/Option$1.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
cck/util/Option$Bool."<init>":(Ljava/lang/String;ZLjava/lang/String;)V
cck/util/Option$Bool.set:(Ljava/lang/String;)V
cck/util/Option$Bool.get:()Z
cck/util/Option$Bool.stringValue:()Ljava/lang/String;
cck/util/Option$Bool.printHelp:()V
cck/util/Option$List."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
cck/util/Option$List.set:(Ljava/lang/String;)V
cck/util/Option$List.setNewDefault:(Ljava/lang/String;)V
cck/util/Option$List.get:()Ljava/util/List;
cck/util/Option$List.stringValue:()Ljava/lang/String;
cck/util/Option$List.parseString:(Ljava/lang/String;)V
cck/util/Option$List.toArray:()[Ljava/lang/String;
cck/util/Option$List.printHelp:()V
cck/text/StringUtil."<init>":()V
cck/text/StringUtil.addrToString:(I)Ljava/lang/String;
cck/text/StringUtil.baseFileName:(Ljava/lang/String;)Ljava/lang/String;
cck/text/StringUtil.readIdentifier:(Ljava/text/CharacterIterator;)Ljava/lang/String;
cck/text/StringUtil.readDotIdentifier:(Ljava/text/CharacterIterator;)Ljava/lang/String;
cck/text/StringUtil.readHexValue:(Ljava/text/CharacterIterator;I)I
cck/text/StringUtil.readOctalValue:(Ljava/text/CharacterIterator;I)I
cck/text/StringUtil.readBinaryValue:(Ljava/text/CharacterIterator;I)I
cck/text/StringUtil.readDecimalValue:(Ljava/text/CharacterIterator;I)I
cck/text/StringUtil.readDecimalString:(Ljava/text/CharacterIterator;I)Ljava/lang/String;
cck/text/StringUtil.readIntegerValue:(Ljava/text/CharacterIterator;)I
cck/text/StringUtil.skipWhiteSpace:(Ljava/text/CharacterIterator;)V
cck/text/StringUtil.peek:(Ljava/text/CharacterIterator;)C
cck/text/StringUtil.peekAndEat:(Ljava/text/CharacterIterator;C)Z
cck/text/StringUtil.peekAndEat:(Ljava/text/CharacterIterator;Ljava/lang/String;)Z
cck/text/StringUtil.expectChar:(Ljava/text/CharacterIterator;C)V
cck/text/StringUtil.expectChars:(Ljava/text/CharacterIterator;Ljava/lang/String;)V
cck/text/StringUtil.expectKeyword:(Ljava/text/CharacterIterator;Ljava/lang/String;)V
cck/text/StringUtil.isHex:(Ljava/lang/String;)Z
cck/text/StringUtil.isBin:(Ljava/lang/String;)Z
cck/text/StringUtil.isHexDigit:(C)Z
cck/text/StringUtil.hexValueOf:(C)I
cck/text/StringUtil.octalValueOf:(C)I
cck/text/StringUtil.isOctalDigit:(C)Z
cck/text/StringUtil.justify:(ZLjava/lang/StringBuffer;Ljava/lang/String;I)V
cck/text/StringUtil.justify:(ZLjava/lang/StringBuffer;JI)V
cck/text/StringUtil.justify:(ZLjava/lang/StringBuffer;FI)V
cck/text/StringUtil.justify:(ZLjava/lang/String;I)Ljava/lang/String;
cck/text/StringUtil.justify:(ZJI)Ljava/lang/String;
cck/text/StringUtil.justify:(ZFI)Ljava/lang/String;
cck/text/StringUtil.leftJustify:(JI)Ljava/lang/String;
cck/text/StringUtil.leftJustify:(FI)Ljava/lang/String;
cck/text/StringUtil.leftJustify:(Ljava/lang/String;I)Ljava/lang/String;
cck/text/StringUtil.rightJustify:(JI)Ljava/lang/String;
cck/text/StringUtil.rightJustify:(FI)Ljava/lang/String;
cck/text/StringUtil.rightJustify:(Ljava/lang/String;I)Ljava/lang/String;
cck/text/StringUtil.toHex:(JI)Ljava/lang/String;
cck/text/StringUtil.toLowHex:(JI)Ljava/lang/String;
cck/text/StringUtil.convertToHex:(JII[C[C)Ljava/lang/String;
cck/text/StringUtil.to0xHex:(JI)Ljava/lang/String;
cck/text/StringUtil.toBin:(JI)Ljava/lang/String;
cck/text/StringUtil.toHex:(Ljava/lang/StringBuffer;JI)V
cck/text/StringUtil.splice:([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
cck/text/StringUtil.quote:(Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.squote:(C)Ljava/lang/String;
cck/text/StringUtil.embed:(Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.embed:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.embed:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.embed:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.embed:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.commalist:(Ljava/util/List;)Ljava/lang/String;
cck/text/StringUtil.commalist:(Ljava/util/List;Ljava/lang/StringBuffer;)V
cck/text/StringUtil.commalist:([Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.commalist:([Ljava/lang/Object;Ljava/lang/StringBuffer;)V
cck/text/StringUtil.commalist:(Ljava/util/Iterator;Ljava/lang/StringBuffer;)V
cck/text/StringUtil.linelist:(Ljava/util/List;)Ljava/lang/String;
cck/text/StringUtil.linelist:(Ljava/lang/StringBuffer;Ljava/util/List;)V
cck/text/StringUtil.commalist:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.commalist:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.commalist:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.interval:(II)Ljava/lang/String;
cck/text/StringUtil.alpha:(I)C
cck/text/StringUtil.qembed:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
cck/text/StringUtil.evaluateIntegerLiteral:(Ljava/lang/String;)I
cck/text/StringUtil.evaluateStringLiteral:(Ljava/lang/String;)Ljava/lang/String;
cck/text/StringUtil.evaluateCharLiteral:(Ljava/lang/String;)C
cck/text/StringUtil.escapeChar:(Ljava/text/CharacterIterator;)C
cck/text/StringUtil.invalidCharLiteral:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
cck/text/StringUtil.trimquotes:(Ljava/lang/String;)Ljava/lang/String;
cck/text/StringUtil.formatParagraphs:(Ljava/lang/String;III)Ljava/lang/String;
cck/text/StringUtil.trimLines:(Ljava/lang/String;II)Ljava/util/List;
cck/text/StringUtil.newBuffer:(Ljava/lang/String;Ljava/lang/StringBuffer;Ljava/util/List;)Ljava/lang/StringBuffer;
cck/text/StringUtil.dup:(CI)Ljava/lang/String;
cck/text/StringUtil.space:(I)Ljava/lang/String;
cck/text/StringUtil.space:(Ljava/lang/StringBuffer;I)V
cck/text/StringUtil.toFixedFloat:(FI)Ljava/lang/String;
cck/text/StringUtil.toDecimal:(JI)Ljava/lang/String;
cck/text/StringUtil.toMultirepString:(II)Ljava/lang/String;
cck/text/StringUtil.appendChar:(ILjava/lang/StringBuffer;)V
cck/text/StringUtil.toBit:(Z)C
cck/text/StringUtil.appendFract:(Ljava/lang/StringBuffer;DI)V
cck/text/StringUtil.stringReplace:(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.stringReplace:(Ljava/lang/String;Ljava/util/Properties;[Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.stringReplace:(Ljava/lang/String;Ljava/util/Properties;[Ljava/lang/String;)Ljava/lang/String;
cck/text/StringUtil.stringReplace:(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.stringReplace:(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
cck/text/StringUtil.stringReplace:(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;
cck/text/StringUtil.replaceVar:(IILjava/lang/String;Ljava/lang/StringBuffer;Ljava/util/Properties;)I
cck/text/StringUtil.scanAhead:(ICILjava/lang/String;Ljava/lang/StringBuffer;Ljava/lang/StringBuffer;)I
cck/text/StringUtil.getProperty:(Ljava/lang/StringBuffer;Ljava/util/Properties;)Ljava/lang/String;
cck/text/StringUtil.replaceVarQuote:(IILjava/lang/String;Ljava/lang/StringBuffer;Ljava/util/Properties;)I
cck/text/StringUtil.getStringChars:(Ljava/lang/String;)[C
cck/text/StringUtil.toList:(Ljava/lang/String;)Ljava/util/List;
cck/text/StringUtil.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
cck/text/StringUtil."<clinit>":()V
cck/util/Util$InternalError."<init>":(Ljava/lang/String;)V
cck/util/Util$InternalError."<init>":(Ljava/lang/String;Ljava/lang/String;)V
cck/util/Util$InternalError.report:()V
cck/text/Terminal."<init>":()V
cck/text/Terminal.print:([I[Ljava/lang/String;)V
cck/text/Terminal.print:(ILjava/lang/String;)V
cck/text/Terminal.println:(ILjava/lang/String;)V
cck/text/Terminal.append:(ILjava/lang/StringBuffer;Ljava/lang/String;)V
cck/text/Terminal.print:(Ljava/lang/String;)V
cck/text/Terminal.println:(Ljava/lang/String;)V
cck/text/Terminal.nextln:()V
cck/text/Terminal.setOutput:(Ljava/io/PrintStream;)V
cck/text/Terminal.printRed:(Ljava/lang/String;)V
cck/text/Terminal.printBlue:(Ljava/lang/String;)V
cck/text/Terminal.printGreen:(Ljava/lang/String;)V
cck/text/Terminal.printYellow:(Ljava/lang/String;)V
cck/text/Terminal.printCyan:(Ljava/lang/String;)V
cck/text/Terminal.printBrightRed:(Ljava/lang/String;)V
cck/text/Terminal.printBrightBlue:(Ljava/lang/String;)V
cck/text/Terminal.printBrightGreen:(Ljava/lang/String;)V
cck/text/Terminal.printBrightCyan:(Ljava/lang/String;)V
cck/text/Terminal.flush:()V
cck/text/Terminal.printPair:(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
cck/text/Terminal.printTriple:(IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
cck/text/Terminal.outputColor:(ILjava/lang/String;)V
cck/text/Terminal."<clinit>":()V
cck/text/Status."<init>":()V
cck/text/Status.begin:(Ljava/lang/String;)V
cck/text/Status.success:()V
cck/text/Status.print:(ILjava/lang/String;)V
cck/text/Status.success:(Ljava/lang/String;)V
cck/text/Status.error:()V
cck/text/Status.error:(Ljava/lang/String;)V
cck/text/Status.error:(Ljava/lang/Throwable;)V
cck/text/Status.error:(Lcck/util/Util$Error;)V
cck/text/Status."<clinit>":()V
avrora/Version."<init>":()V
avrora/Version.main:([Ljava/lang/String;)V
avrora/Version."<clinit>":()V
cck/util/VersionTag.getVersionTag:(Ljava/lang/String;)Lcck/util/VersionTag;
cck/util/VersionTag."<init>":(Ljava/lang/String;Ljava/lang/String;III)V
cck/util/VersionTag.toString:()Ljava/lang/String;
cck/util/VersionTag.prefixString:(ZC)Ljava/lang/String;
cck/util/VersionTag.commitNumber:()Ljava/lang/String;
cck/util/VersionTag.isStable:()Z
cck/util/VersionTag."<clinit>":()V
avrora/Defaults."<init>":()V
avrora/Defaults.addAll:()V
avrora/Defaults.addMonitors:()V
avrora/Defaults.addTestHarnesses:()V
avrora/Defaults.addInputFormats:()V
avrora/Defaults.addActions:()V
avrora/Defaults.addSimulations:()V
avrora/Defaults.addPlatforms:()V
avrora/Defaults.addMicrocontrollers:()V
avrora/Defaults.getMicrocontroller:(Ljava/lang/String;)Lavrora/sim/mcu/MicrocontrollerFactory;
avrora/Defaults.getPlatform:(Ljava/lang/String;)Lavrora/sim/platform/PlatformFactory;
avrora/Defaults.getProgramReader:(Ljava/lang/String;)Lavrora/core/ProgramReader;
avrora/Defaults.getAction:(Ljava/lang/String;)Lavrora/actions/Action;
avrora/Defaults.getMonitor:(Ljava/lang/String;)Lavrora/monitors/MonitorFactory;
avrora/Defaults.getSimulation:(Ljava/lang/String;)Lavrora/sim/Simulation;
avrora/Defaults.getTestHarnessMap:()Lcck/util/ClassMap;
avrora/Defaults.getActionList:()Ljava/util/List;
avrora/Defaults.getProgramReaderList:()Ljava/util/List;
avrora/Defaults.addSubCategories:(Lcck/util/ClassMap;)V
avrora/Defaults.addMainCategory:(Lcck/help/HelpCategory;)V
avrora/Defaults.getHelpCategory:(Ljava/lang/String;)Lcck/help/HelpCategory;
avrora/Defaults.getMainCategories:()Ljava/util/List;
avrora/Defaults.getAllCategories:()Ljava/util/List;
avrora/Defaults.newSimulator:(ILavrora/core/Program;)Lavrora/sim/Simulator;
avrora/Defaults.newSimulator:(ILjava/lang/String;JJLavrora/core/Program;)Lavrora/sim/Simulator;
avrora/Defaults.class$:(Ljava/lang/String;)Ljava/lang/Class;
avrora/Defaults."<clinit>":()V
avrora/sim/Simulation."<init>":(Ljava/lang/String;Ljava/lang/String;Lavrora/sim/clock/Synchronizer;)V
avrora/sim/Simulation.process:(Lcck/util/Options;[Ljava/lang/String;)V
avrora/sim/Simulation.createSimulator:(ILavrora/sim/InterpreterFactory;Lavrora/sim/mcu/Microcontroller;Lavrora/core/Program;)Lavrora/sim/Simulator;
avrora/sim/Simulation.getPrinter:(Lavrora/sim/Simulator;Ljava/lang/String;)Lavrora/sim/output/SimPrinter;
avrora/sim/Simulation.getPrinter:(Lavrora/sim/Simulator;)Lavrora/sim/output/SimPrinter;
avrora/sim/Simulation.getEnergyControl:()Lavrora/sim/energy/EnergyControl;
avrora/sim/Simulation.createNode:(Lavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)Lavrora/sim/Simulation$Node;
avrora/sim/Simulation.newNode:(ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)Lavrora/sim/Simulation$Node;
avrora/sim/Simulation.getNumberOfNodes:()I
avrora/sim/Simulation.getRandom:()Ljava/util/Random;
avrora/sim/Simulation.grow:()V
avrora/sim/Simulation.getNode:(I)Lavrora/sim/Simulation$Node;
avrora/sim/Simulation.removeNode:(I)V
avrora/sim/Simulation.start:()V
avrora/sim/Simulation.instantiateNodes:()V
avrora/sim/Simulation.pause:()V
avrora/sim/Simulation.resume:()V
avrora/sim/Simulation.stop:()V
avrora/sim/Simulation.join:()V
avrora/sim/Simulation.stopNode:(I)V
avrora/sim/Simulation.isPaused:()Z
avrora/sim/Simulation.isRunning:()Z
avrora/sim/Simulation.getNodeIterator:()Ljava/util/Iterator;
avrora/sim/Simulation.getPlatform:()Lavrora/sim/platform/PlatformFactory;
avrora/sim/Simulation.processMonitorList:()V
cck/help/HelpCategory.newOption:(Ljava/lang/String;ZLjava/lang/String;)Lcck/util/Option$Bool;
cck/help/HelpCategory.newOption:(Ljava/lang/String;JLjava/lang/String;)Lcck/util/Option$Long;
cck/help/HelpCategory.newOption:(Ljava/lang/String;DLjava/lang/String;)Lcck/util/Option$Double;
cck/help/HelpCategory.newOption:(Ljava/lang/String;JJLjava/lang/String;)Lcck/util/Option$Interval;
cck/help/HelpCategory.newOption:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$Str;
cck/help/HelpCategory.newOptionList:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcck/util/Option$List;
cck/help/HelpCategory."<init>":(Ljava/lang/String;Ljava/lang/String;)V
cck/help/HelpCategory.getHelp:()Ljava/lang/String;
cck/help/HelpCategory.getName:()Ljava/lang/String;
cck/help/HelpCategory.setName:(Ljava/lang/String;)V
cck/help/HelpCategory.addSection:(Ljava/lang/String;Ljava/lang/String;)V
cck/help/HelpCategory.addOptionSection:(Ljava/lang/String;Lcck/util/Options;)V
cck/help/HelpCategory.addListSection:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
cck/help/HelpCategory.addSubcategorySection:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
cck/help/HelpCategory.addOptionValueSection:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcck/util/ClassMap;)V
cck/help/HelpCategory.addCommandExample:(Ljava/lang/String;Ljava/lang/String;)V
cck/help/HelpCategory.printHelp:()V
cck/help/HelpCategory."<clinit>":()V
cck/help/HelpItem.getHelp:()Ljava/lang/String;
cck/help/HelpItem.printHelp:()V
avrora/sim/types/SingleSimulation."<init>":()V
avrora/sim/types/SingleSimulation.process:(Lcck/util/Options;[Ljava/lang/String;)V
cck/util/ClassMap."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
cck/util/ClassMap.addClass:(Ljava/lang/String;Ljava/lang/Class;)V
cck/util/ClassMap.addInstance:(Ljava/lang/String;Ljava/lang/Object;)V
cck/util/ClassMap.getClass:(Ljava/lang/String;)Ljava/lang/Class;
cck/util/ClassMap.getObjectOfClass:(Ljava/lang/String;)Ljava/lang/Object;
cck/util/ClassMap.getAlias:(Ljava/lang/Object;)Ljava/lang/String;
cck/util/ClassMap.getSortedList:()Ljava/util/List;
cck/util/ClassMap.getIterator:()Ljava/util/Iterator;
cck/util/ClassMap.iterator:()Ljava/util/Iterator;
avrora/actions/Action."<init>":(Ljava/lang/String;)V
avrora/actions/Action.run:([Ljava/lang/String;)V
cck/help/HelpCategory$1."<init>":()V
cck/help/HelpCategory$1.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
avrora/actions/DisassembleAction."<init>":()V
avrora/actions/DisassembleAction.run:([Ljava/lang/String;)V
avrora/actions/DisassembleAction.disassembleArguments:([Ljava/lang/String;[BLavrora/arch/AbstractDisassembler;)V
avrora/actions/DisassembleAction.disassembleFile:(Lavrora/arch/AbstractDisassembler;)V
avrora/actions/DisassembleAction.exhaustive:(Lavrora/arch/AbstractDisassembler;)V
avrora/actions/DisassembleAction.disassembleAndPrint:([BILavrora/arch/AbstractDisassembler;)I
avrora/actions/DisassembleAction.print:([BIILjava/lang/String;)V
avrora/actions/SimAction."<init>":()V
avrora/actions/SimAction.run:([Ljava/lang/String;)V
avrora/actions/SimAction.exitSimulation:(Ljava/lang/Throwable;)V
avrora/actions/SimAction.report:(Ljava/lang/Throwable;)V
avrora/actions/SimAction.getLocationList:(Lavrora/core/Program;Ljava/util/List;)Ljava/util/List;
avrora/actions/SimAction.printSimHeader:()V
avrora/actions/SimAction.reportMonitors:(Lavrora/sim/Simulation;)V
avrora/actions/SimAction.reportTime:(Lavrora/sim/Simulation;JZ)V
avrora/actions/SimAction.access$000:(Lavrora/actions/SimAction;Ljava/lang/Throwable;)V
avrora/actions/SimAction$AsynchronousExit."<init>":()V
avrora/actions/SimAction$TimeoutException."<init>":(ILavrora/sim/State;JLjava/lang/String;)V
avrora/actions/SimAction$BreakPointException."<init>":(ILavrora/sim/State;)V
avrora/actions/SimAction$ShutdownThread."<init>":(Lavrora/actions/SimAction;)V
avrora/actions/SimAction$ShutdownThread.run:()V
avrora/actions/AnalyzeStackAction."<init>":()V
avrora/actions/AnalyzeStackAction.run:([Ljava/lang/String;)V
avrora/actions/TestAction."<init>":()V
avrora/actions/TestAction.run:([Ljava/lang/String;)V
avrora/actions/CFGAction."<init>":()V
avrora/actions/CFGAction.run:([Ljava/lang/String;)V
avrora/actions/CFGAction.dumpCFG:(Lavrora/core/ControlFlowGraph;)V
avrora/actions/CFGAction.dumpDotCFG:(Lavrora/core/ControlFlowGraph;)V
avrora/actions/CFGAction.dumpDotNodes:(Lcck/text/Printer;)V
avrora/actions/CFGAction.assignProcedureColors:()V
avrora/actions/CFGAction.printBlock:(Lavrora/core/ControlFlowGraph$Block;Lcck/text/Printer;)V
avrora/actions/CFGAction.dumpDotEdges:(Lcck/text/Printer;)V
avrora/actions/CFGAction.getShape:(Lavrora/core/ControlFlowGraph$Block;)Ljava/lang/String;
avrora/actions/CFGAction.colorize:(Lavrora/core/ControlFlowGraph$Block;)Ljava/lang/String;
avrora/actions/CFGAction.getColor:(Lavrora/core/ControlFlowGraph$Block;)Ljava/lang/String;
avrora/actions/CFGAction.isReturnEdge:(Ljava/lang/String;)Z
avrora/actions/CFGAction.dumpEdges:(Ljava/util/Iterator;)V
avrora/actions/CFGAction.dumpDotEdges:(Ljava/util/Iterator;Lcck/text/Printer;)V
avrora/actions/CFGAction.emitIndirectEdge:(Lavrora/core/ControlFlowGraph$Block;Ljava/lang/String;Lcck/text/Printer;Ljava/lang/String;)V
avrora/actions/CFGAction.emitEdge:(Lavrora/core/ControlFlowGraph$Block;Lcck/text/Printer;Ljava/lang/String;Ljava/lang/String;Z)V
avrora/actions/CFGAction.getEntryOf:(Lavrora/core/ControlFlowGraph$Block;)Lavrora/core/ControlFlowGraph$Block;
avrora/actions/CFGAction.blockName:(Lavrora/core/ControlFlowGraph$Block;)Ljava/lang/String;
avrora/actions/CFGAction."<clinit>":()V
avrora/actions/ISEAAction."<init>":()V
avrora/actions/ISEAAction.run:([Ljava/lang/String;)V
avrora/syntax/objdump/ODPPAction."<init>":()V
avrora/syntax/objdump/ODPPAction."<init>":(Lcck/util/Option$List;)V
avrora/syntax/objdump/ODPPAction.run:([Ljava/lang/String;)V
avrora/actions/ELFDumpAction."<init>":()V
avrora/actions/ELFDumpAction.run:([Ljava/lang/String;)V
avrora/actions/ELFDumpAction.printHeader:(Lcck/elf/ELFHeader;)V
avrora/actions/ELFDumpAction.printSHT:(Lcck/elf/ELFSectionHeaderTable;)V
avrora/actions/ELFDumpAction.getName:(Lcck/elf/ELFStringTable;I)Ljava/lang/String;
avrora/actions/ELFDumpAction.printPHT:(Lcck/elf/ELFProgramHeaderTable;)V
avrora/actions/ELFDumpAction.printSymbolTable:(Lcck/elf/ELFSymbolTable;Lcck/elf/ELFSectionHeaderTable;)V
cck/elf/ELFHeader$FormatError."<init>":(Lcck/elf/ELFHeader;)V
cck/elf/ELFHeader."<init>":()V
cck/elf/ELFHeader.read:(Ljava/io/RandomAccessFile;)V
cck/elf/ELFHeader.checkIdent:()V
cck/elf/ELFHeader.checkIndentByte:(II)V
cck/elf/ELFHeader.getVersion:()I
cck/elf/ELFHeader.getArchitecture:()Ljava/lang/String;
cck/elf/ELFHeader.isLittleEndian:()Z
cck/elf/ELFHeader.isBigEndian:()Z
cck/elf/ELFHeader.is32Bit:()Z
cck/elf/ELFHeader.is64Bit:()Z
cck/help/ClassMapValueItem."<init>":(ILjava/lang/String;Ljava/lang/String;Lcck/util/ClassMap;)V
cck/help/ClassMapValueItem.getHelp:()Ljava/lang/String;
cck/help/ClassMapValueItem.printHelp:()V
cck/help/ClassMapValueItem.computeHelp:()Ljava/lang/String;
cck/help/HelpCategory$ListSection."<init>":(Lcck/help/HelpCategory;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
cck/help/HelpCategory$ListSection.printHelp:()V
cck/help/HelpCategory$Section."<init>":(Lcck/help/HelpCategory;)V
cck/help/HelpCategory$Section.printHelp:()V
cck/help/HelpCategory$Section."<init>":(Lcck/help/HelpCategory;Lcck/help/HelpCategory$1;)V
cck/help/HelpSystem."<init>":()V
cck/help/HelpSystem.getCategory:(Ljava/lang/String;)Lcck/help/HelpCategory;
cck/help/HelpSystem.addCategory:(Ljava/lang/String;Lcck/help/HelpCategory;)V
cck/help/HelpSystem.addCategory:(Ljava/lang/String;Ljava/lang/Class;)V
cck/help/HelpSystem.getSortedList:()Ljava/util/List;
cck/help/HelpSystem.class$:(Ljava/lang/String;)Ljava/lang/Class;
cck/help/HelpSystem."<clinit>":()V
cck/help/HelpCategory$ParagraphSection."<init>":(Lcck/help/HelpCategory;Ljava/lang/String;Ljava/lang/String;)V
cck/help/HelpCategory$ParagraphSection.printHelp:()V
cck/help/HelpCategory$OptionsSection."<init>":(Lcck/help/HelpCategory;Ljava/lang/String;Lcck/util/Options;)V
cck/help/HelpCategory$OptionsSection.printHelp:()V
cck/util/Option$Long."<init>":(Ljava/lang/String;JLjava/lang/String;)V
cck/util/Option$Long.set:(Ljava/lang/String;)V
cck/util/Option$Long.get:()J
cck/util/Option$Long.stringValue:()Ljava/lang/String;
cck/util/Option$Long.printHelp:()V
avrora/sim/util/SimUtil."<init>":()V
avrora/sim/util/SimUtil.readError:(Lavrora/sim/Simulator;Ljava/lang/String;I)V
avrora/sim/util/SimUtil.writeError:(Lavrora/sim/Simulator;Ljava/lang/String;IB)V
avrora/sim/util/SimUtil.toIDTimeString:(Ljava/lang/StringBuffer;ILavrora/sim/clock/Clock;)V
avrora/sim/util/SimUtil.toIDTimeString:(ILavrora/sim/clock/Clock;)Ljava/lang/String;
avrora/sim/util/SimUtil.getIDTimeString:(Lavrora/sim/Simulator;)Ljava/lang/String;
avrora/sim/util/SimUtil.getIDTimeString:(Ljava/lang/StringBuffer;Lavrora/sim/Simulator;)V
avrora/sim/util/SimUtil.warning:(Lavrora/sim/Simulator;Ljava/lang/String;Ljava/lang/String;)V
avrora/sim/util/SimUtil."<clinit>":()V
avrora/sim/clock/Clock."<init>":(Ljava/lang/String;J)V
avrora/sim/clock/Clock.getHZ:()J
avrora/sim/clock/Clock.getName:()Ljava/lang/String;
avrora/sim/clock/Clock.getCount:()J
avrora/sim/clock/Clock.insertEvent:(Lavrora/sim/Simulator$Event;J)V
avrora/sim/clock/Clock.removeEvent:(Lavrora/sim/Simulator$Event;)V
avrora/sim/clock/Clock.millisToCycles:(D)J
avrora/sim/clock/Clock.cyclesToMillis:(J)D
avrora/sim/clock/MainClock."<init>":(Ljava/lang/String;J)V
avrora/sim/clock/MainClock.getCount:()J
avrora/sim/clock/MainClock.insertEvent:(Lavrora/sim/Simulator$Event;J)V
avrora/sim/clock/MainClock.removeEvent:(Lavrora/sim/Simulator$Event;)V
avrora/sim/clock/MainClock.advance:(J)V
avrora/sim/clock/MainClock.getFirstEventDelta:()J
avrora/sim/clock/MainClock.skipAhead:()V
avrora/sim/platform/PlatformFactory.newPlatform:(ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform;
avrora/sim/clock/Synchronizer."<init>":()V
avrora/sim/clock/Synchronizer.addNode:(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/Synchronizer.removeNode:(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/Synchronizer.waitForNeighbors:(J)V
avrora/sim/clock/Synchronizer.start:()V
avrora/sim/clock/Synchronizer.join:()V
avrora/sim/clock/Synchronizer.pause:()V
avrora/sim/clock/Synchronizer.stop:()V
avrora/sim/clock/Synchronizer.synch:(J)V
avrora/sim/clock/Synchronizer$Single."<init>":()V
avrora/sim/clock/Synchronizer$Single.addNode:(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/Synchronizer$Single.removeNode:(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/Synchronizer$Single.waitForNeighbors:(J)V
avrora/sim/clock/Synchronizer$Single.start:()V
avrora/sim/clock/Synchronizer$Single.join:()V
avrora/sim/clock/Synchronizer$Single.pause:()V
avrora/sim/clock/Synchronizer$Single.stop:()V
avrora/sim/clock/Synchronizer$Single.synch:(J)V
avrora/sim/types/SensorSimulation."<init>":()V
avrora/sim/types/SensorSimulation.newNode:(ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)Lavrora/sim/Simulation$Node;
avrora/sim/types/SensorSimulation.process:(Lcck/util/Options;[Ljava/lang/String;)V
avrora/sim/types/SensorSimulation.createNodes:([Ljava/lang/String;Lavrora/sim/platform/PlatformFactory;)V
avrora/sim/types/SensorSimulation.createNoise:()V
avrora/sim/types/SensorSimulation.processSensorInput:()V
avrora/sim/types/SensorSimulation.addSensorData:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
avrora/sim/types/SensorSimulation.processRandom:()J
avrora/sim/types/SensorSimulation.processStagger:()J
avrora/sim/types/SensorSimulation.access$000:(Lavrora/sim/types/SensorSimulation;)Lavrora/sim/clock/Synchronizer;
avrora/sim/types/SensorSimulation.access$100:(Lavrora/sim/types/SensorSimulation;)Lavrora/sim/clock/Synchronizer;
avrora/sim/types/SensorSimulation.access$200:(Lavrora/sim/types/SensorSimulation;)Lavrora/sim/clock/Synchronizer;
avrora/sim/types/SensorSimulation.access$300:(Lavrora/sim/types/SensorSimulation;)Lavrora/sim/clock/Synchronizer;
avrora/sim/types/SensorSimulation.access$400:(Lavrora/sim/types/SensorSimulation;)Lavrora/sim/clock/Synchronizer;
avrora/sim/types/SensorSimulation."<clinit>":()V
avrora/sim/Simulation$Node."<init>":(Lavrora/sim/Simulation;ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)V
avrora/sim/Simulation$Node.instantiate:()V
avrora/sim/Simulation$Node.addMonitors:()V
avrora/sim/Simulation$Node.processTimeout:()V
avrora/sim/Simulation$Node.processInterruptSched:()V
avrora/sim/Simulation$Node.processEepromLoad:()V
avrora/sim/Simulation$Node.getSimulator:()Lavrora/sim/Simulator;
avrora/sim/Simulation$Node.getSimulation:()Lavrora/sim/Simulation;
avrora/sim/Simulation$Node.addMonitor:(Lavrora/sim/Simulation$Monitor;)V
avrora/sim/Simulation$Node.removeMonitor:(Lavrora/sim/Simulation$Monitor;)V
avrora/sim/Simulation$Node.getMonitors:()Ljava/util/List;
avrora/sim/Simulation$Node.getProgram:()Lavrora/core/LoadableProgram;
avrora/sim/Simulation$Node.remove:()V
avrora/sim/Simulation$Node.getThread:()Lavrora/sim/SimulatorThread;
avrora/sim/types/SensorSimulation$SensorNode."<init>":(Lavrora/sim/types/SensorSimulation;ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)V
avrora/sim/types/SensorSimulation$SensorNode.instantiate:()V
avrora/sim/types/SensorSimulation$SensorNode.addSensorData:()V
avrora/sim/types/SensorSimulation$SensorNode.createNode:()V
avrora/sim/types/SensorSimulation$SensorNode.createCC2420Medium:()Lavrora/sim/radio/Medium;
avrora/sim/types/SensorSimulation$SensorNode.createCC1000Medium:()Lavrora/sim/radio/Medium;
avrora/sim/types/SensorSimulation$SensorNode.createRadioModel:()V
avrora/sim/types/SensorSimulation$SensorNode.setNodePosition:()V
avrora/sim/types/SensorSimulation$SensorNode.updateNodeID:()V
avrora/sim/types/SensorSimulation$SensorNode.updateVariable:(Lavrora/core/SourceMapping;Ljava/lang/String;I)V
avrora/sim/types/SensorSimulation$SensorNode.remove:()V
avrora/sim/clock/RippleSynchronizer."<init>":(JLavrora/sim/Simulator$Event;)V
avrora/sim/clock/RippleSynchronizer.advance:(JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink;
avrora/sim/clock/RippleSynchronizer.waitFor:(JLavrora/sim/clock/RippleSynchronizer$WaitLink;)V
avrora/sim/clock/RippleSynchronizer.waitForLink:(Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V
avrora/sim/clock/RippleSynchronizer.insertLink:(JLavrora/sim/clock/RippleSynchronizer$WaitLink;Lavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink;
avrora/sim/clock/RippleSynchronizer.notifyLink:(Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V
avrora/sim/clock/RippleSynchronizer.start:()V
avrora/sim/clock/RippleSynchronizer.join:()V
avrora/sim/clock/RippleSynchronizer.stop:()V
avrora/sim/clock/RippleSynchronizer.pause:()V
avrora/sim/clock/RippleSynchronizer.synch:(J)V
avrora/sim/clock/RippleSynchronizer.addNode:(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/RippleSynchronizer.removeNode:(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/RippleSynchronizer.waitForNeighbors:(J)V
avrora/sim/clock/RippleSynchronizer.access$000:(Lavrora/sim/clock/RippleSynchronizer;JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink;
avrora/sim/clock/RippleSynchronizer.class$:(Ljava/lang/String;)Ljava/lang/Class;
avrora/sim/clock/RippleSynchronizer."<clinit>":()V
avrora/sim/types/WiredSimulation."<init>":()V
avrora/sim/types/WiredSimulation.newNode:(ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)Lavrora/sim/Simulation$Node;
avrora/sim/types/WiredSimulation.process:(Lcck/util/Options;[Ljava/lang/String;)V
avrora/sim/types/WiredSimulation.instantiateNodes:()V
avrora/sim/types/WiredSimulation.createNodes:([Ljava/lang/String;Lavrora/sim/platform/PlatformFactory;)V
avrora/sim/types/WiredSimulation.processRandom:()J
avrora/sim/types/WiredSimulation.processStagger:()J
avrora/sim/types/WiredSimulation."<clinit>":()V
avrora/sim/types/WiredSimulation$WiredNode."<init>":(Lavrora/sim/types/WiredSimulation;ILavrora/sim/platform/PlatformFactory;Lavrora/core/LoadableProgram;)V
avrora/sim/types/WiredSimulation$WiredNode.instantiate:()V
avrora/sim/types/WiredSimulation$WiredNode.createNode:()V
avrora/sim/types/WiredSimulation$WiredNode.remove:()V
cck/util/Option$Double."<init>":(Ljava/lang/String;DLjava/lang/String;)V
cck/util/Option$Double.set:(Ljava/lang/String;)V
cck/util/Option$Double.get:()D
cck/util/Option$Double.stringValue:()Ljava/lang/String;
cck/util/Option$Double.printHelp:()V
avrora/sim/energy/EnergyControl."<init>":()V
avrora/sim/energy/EnergyControl.subscribe:(Lavrora/sim/energy/EnergyObserver;)V
avrora/sim/energy/EnergyControl.getConsumers:()Ljava/util/LinkedList;
avrora/sim/energy/EnergyControl.stateChange:(Lavrora/sim/energy/Energy;)V
avrora/sim/energy/EnergyControl.activate:()V
avrora/sim/energy/EnergyControl.addConsumer:(Lavrora/sim/energy/Energy;)V
cck/util/Option$Interval."<init>":(Ljava/lang/String;JJLjava/lang/String;)V
cck/util/Option$Interval.set:(Ljava/lang/String;)V
cck/util/Option$Interval.getLow:()J
cck/util/Option$Interval.getHigh:()J
cck/util/Option$Interval.stringValue:()Ljava/lang/String;
cck/util/Option$Interval.printHelp:()V
avrora/monitors/MonitorFactory."<init>":(Ljava/lang/String;)V
avrora/monitors/MonitorFactory.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/MonitorFactory.processOptions:(Lcck/util/Options;)V
avrora/monitors/CallMonitor."<init>":()V
avrora/monitors/CallMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/CallMonitor.class$:(Ljava/lang/String;)Ljava/lang/Class;
avrora/monitors/Monitor.report:()V
avrora/monitors/BreakMonitor."<init>":()V
avrora/monitors/BreakMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/PrintMonitor."<init>":()V
avrora/monitors/PrintMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/TimerMonitor."<init>":()V
avrora/monitors/TimerMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/ProfileMonitor."<init>":()V
avrora/monitors/ProfileMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/MemoryMonitor."<init>":()V
avrora/monitors/MemoryMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/SleepMonitor."<init>":()V
avrora/monitors/SleepMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/LEDMonitor."<init>":()V
avrora/monitors/LEDMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/StackMonitor."<init>":()V
avrora/monitors/StackMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/EnergyMonitor."<init>":()V
avrora/monitors/EnergyMonitor."<init>":(Ljava/lang/String;)V
avrora/monitors/EnergyMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/InterruptMonitor."<init>":()V
avrora/monitors/InterruptMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/InteractiveMonitor."<init>":()V
avrora/monitors/InteractiveMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/TraceMonitor."<init>":()V
avrora/monitors/TraceMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/EnergyProfiler."<init>":()V
avrora/monitors/EnergyProfiler.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/PacketMonitor."<init>":()V
avrora/monitors/PacketMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/GDBServer."<init>":()V
avrora/monitors/GDBServer.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/GDBServer."<clinit>":()V
avrora/monitors/SimPerfMonitor."<init>":()V
avrora/monitors/SimPerfMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/SerialMonitor."<init>":()V
avrora/monitors/SerialMonitor.processOptions:(Lcck/util/Options;)V
avrora/monitors/SerialMonitor.processSocketConnections:()V
avrora/monitors/SerialMonitor.processDeviceConnections:()V
avrora/monitors/SerialMonitor.addConnection:(ILavrora/monitors/SerialMonitor$Connection;)V
avrora/monitors/SerialMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/SerialMonitor$Connection."<init>":(Lavrora/monitors/SerialMonitor;)V
avrora/monitors/SerialMonitor$Connection.connect:(Lavrora/sim/mcu/USART;)V
avrora/monitors/SerialMonitor$FileConnection."<init>":(Lavrora/monitors/SerialMonitor;)V
avrora/monitors/SerialMonitor$FileConnection.connect:(Lavrora/sim/mcu/USART;)V
avrora/monitors/SerialMonitor$SocketConnection."<init>":(Lavrora/monitors/SerialMonitor;)V
avrora/monitors/SerialMonitor$SocketConnection.connect:(Lavrora/sim/mcu/USART;)V
avrora/monitors/SPIMonitor."<init>":()V
avrora/monitors/SPIMonitor.processOptions:(Lcck/util/Options;)V
avrora/monitors/SPIMonitor.processSocketConnections:()V
avrora/monitors/SPIMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/CallTimeMonitor."<init>":()V
avrora/monitors/CallTimeMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/CallTreeProfiler."<init>":()V
avrora/monitors/CallTreeProfiler.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/TripTimeMonitor."<init>":()V
avrora/monitors/TripTimeMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/IORegMonitor."<init>":()V
avrora/monitors/IORegMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/VirgilMonitor."<init>":()V
avrora/monitors/VirgilMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/RealTimeMonitor."<init>":()V
avrora/monitors/RealTimeMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/sim/Simulator$Event.fire:()V
avrora/monitors/SnifferMonitor."<init>":()V
avrora/monitors/SnifferMonitor.newMonitor:(Lavrora/sim/Simulator;)Lavrora/monitors/Monitor;
avrora/monitors/SnifferMonitor.class$:(Ljava/lang/String;)Ljava/lang/Class;
avrora/sim/platform/Mica2$Factory."<init>":()V
avrora/sim/platform/Mica2$Factory.newPlatform:(ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform;
avrora/sim/mcu/Microcontroller.getSimulator:()Lavrora/sim/Simulator;
avrora/sim/mcu/Microcontroller.getPlatform:()Lavrora/sim/platform/Platform;
avrora/sim/mcu/Microcontroller.setPlatform:(Lavrora/sim/platform/Platform;)V
avrora/sim/mcu/Microcontroller.getPin:(Ljava/lang/String;)Lavrora/sim/mcu/Microcontroller$Pin;
avrora/sim/mcu/Microcontroller.getPin:(I)Lavrora/sim/mcu/Microcontroller$Pin;
avrora/sim/mcu/Microcontroller.sleep:()V
avrora/sim/mcu/Microcontroller.wakeup:()I
avrora/sim/mcu/Microcontroller.getClockDomain:()Lavrora/sim/clock/ClockDomain;
avrora/sim/mcu/Microcontroller.getRegisterSet:()Lavrora/sim/mcu/RegisterSet;
avrora/sim/mcu/Microcontroller.getProperties:()Lavrora/sim/mcu/MCUProperties;
avrora/sim/platform/Platform."<init>":(Lavrora/sim/mcu/Microcontroller;)V
avrora/sim/platform/Platform.getMicrocontroller:()Lavrora/sim/mcu/Microcontroller;
avrora/sim/platform/Platform.addDevice:(Ljava/lang/String;Ljava/lang/Object;)V
avrora/sim/platform/Platform.getDevice:(Ljava/lang/String;)Ljava/lang/Object;
avrora/sim/platform/Mica2."<init>":(Lavrora/sim/mcu/Microcontroller;)V
avrora/sim/platform/Mica2.addDevices:()V
avrora/sim/platform/MicaZ$Factory."<init>":()V
avrora/sim/platform/MicaZ$Factory.newPlatform:(ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform;
avrora/sim/platform/MicaZ."<init>":(Lavrora/sim/mcu/Microcontroller;)V
avrora/sim/platform/MicaZ.addDevices:()V
avrora/sim/platform/MicaZ."<init>":(Lavrora/sim/mcu/Microcontroller;Lavrora/sim/platform/MicaZ$1;)V
avrora/sim/platform/Seres$Factory."<init>":()V
avrora/sim/platform/Seres$Factory.newPlatform:(ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform;
avrora/sim/platform/Seres."<init>":(Lavrora/sim/mcu/Microcontroller;)V
avrora/sim/platform/Seres.addDevices:()V
avrora/sim/platform/Seres."<init>":(Lavrora/sim/mcu/Microcontroller;Lavrora/sim/platform/Seres$1;)V
avrora/sim/platform/Superbot$Factory."<init>":()V
avrora/sim/platform/Superbot$Factory.newPlatform:(ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform;
avrora/sim/platform/Superbot."<init>":(Lavrora/sim/mcu/Microcontroller;)V
avrora/sim/platform/Superbot.addDevices:()V
avrora/sim/platform/Superbot."<init>":(Lavrora/sim/mcu/Microcontroller;Lavrora/sim/platform/Superbot$1;)V
avrora/sim/platform/Telos$Factory."<init>":()V
avrora/sim/platform/Telos$Factory.newPlatform:(ILavrora/sim/Simulation;Lavrora/core/Program;)Lavrora/sim/platform/Platform;
avrora/sim/platform/Telos."<init>":(Lavrora/sim/mcu/Microcontroller;)V
avrora/sim/platform/Telos.addDevices:()V
avrora/sim/clock/RippleSynchronizer$WaitLink."<init>":(J)V
avrora/core/LoadableProgram."<init>":(Ljava/io/File;)V
avrora/core/LoadableProgram."<init>":(Ljava/lang/String;)V
avrora/core/LoadableProgram.getProgram:()Lavrora/core/Program;
avrora/core/LoadableProgram.load:()V
avrora/core/LoadableProgram.getName:()Ljava/lang/String;
cck/text/Status$Item."<init>":(Ljava/lang/String;)V
avrora/core/ProgramReader.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/core/ProgramReader."<init>":(Ljava/lang/String;)V
avrora/core/ProgramReader.addIndirectEdges:(Lavrora/core/Program;)V
avrora/core/ProgramReader.getArchitecture:()Lavrora/arch/AbstractArchitecture;
avrora/Defaults$AutoProgramReader."<init>":()V
avrora/Defaults$AutoProgramReader.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/syntax/atmel/AtmelProgramReader.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/syntax/atmel/AtmelProgramReader."<init>":()V
avrora/syntax/objdump/ObjDumpProgramReader.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/syntax/objdump/ObjDumpProgramReader."<init>":()V
avrora/syntax/objdump/ObjDump2ProgramReader.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/syntax/objdump/ObjDump2ProgramReader."<init>":()V
avrora/syntax/elf/ELFParser."<init>":()V
avrora/syntax/elf/ELFParser.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/syntax/elf/ELFParser.loadSymbolTables:(Lavrora/core/Program;Ljava/io/RandomAccessFile;)V
avrora/syntax/elf/ELFParser.getArchitecture:()Lavrora/arch/AbstractArchitecture;
avrora/syntax/elf/ELFParser.loadSections:(Ljava/io/RandomAccessFile;)Lavrora/core/Program;
avrora/syntax/elf/ELFParser.createProgram:()Lavrora/core/Program;
avrora/syntax/elf/ELFParser.disassembleSection:([BLcck/elf/ELFProgramHeaderTable$Entry32;Lavrora/core/Program;)V
avrora/syntax/elf/ELFParser.addSymbols:(Lavrora/core/SourceMapping;Lcck/elf/ELFSymbolTable;Lcck/elf/ELFStringTable;)V
avrora/syntax/elf/ELFParser.findLMA:(Lcck/elf/ELFSymbolTable$Entry;)I
avrora/syntax/raw/RAWReader."<init>":()V
avrora/syntax/raw/RAWReader.read:([Ljava/lang/String;)Lavrora/core/Program;
avrora/syntax/raw/RAWReader.parseFile:(Ljava/lang/String;)Ljava/util/List;
avrora/syntax/raw/RAWReader.createProgram:(Lavrora/arch/AbstractArchitecture;Ljava/util/List;)Lavrora/core/Program;
avrora/syntax/raw/RAWReader.loadProgram:(Lavrora/core/Program;Ljava/util/List;)V
avrora/syntax/raw/RAWReader.loadBytes:(Lavrora/syntax/raw/RAWReader$Record;Lavrora/core/Program;)V
avrora/syntax/raw/RAWReader.loadInstr:(Lavrora/syntax/raw/RAWReader$Record;Lavrora/core/Program;)V
avrora/syntax/raw/RAWReader.parse:(ILjava/lang/String;)Lavrora/syntax/raw/RAWReader$Record;
avrora/syntax/raw/RAWReader.readRecord:(CILjava/text/CharacterIterator;)Lavrora/syntax/raw/RAWReader$Record;
avrora/syntax/raw/RAWReader.readDirective:(Ljava/text/CharacterIterator;)Lavrora/syntax/raw/RAWReader$Record;
avrora/syntax/raw/RAWReader.readAddress:(Ljava/text/CharacterIterator;C)I
avrora/syntax/raw/RAWReader.readByte:(Lavrora/syntax/raw/RAWReader$Record;Ljava/text/CharacterIterator;)V
avrora/syntax/raw/RAWReader.readString:(Lavrora/syntax/raw/RAWReader$Record;Ljava/text/CharacterIterator;)V
cck/elf/ELFLoader."<init>":()V
cck/elf/ELFLoader.readELFHeader:(Ljava/io/RandomAccessFile;)Lcck/elf/ELFHeader;
cck/elf/ELFLoader.readPHT:(Ljava/io/RandomAccessFile;Lcck/elf/ELFHeader;)Lcck/elf/ELFProgramHeaderTable;
cck/elf/ELFLoader.readSHT:(Ljava/io/RandomAccessFile;Lcck/elf/ELFHeader;)Lcck/elf/ELFSectionHeaderTable;
cck/elf/ELFLoader.readSymbolTables:(Ljava/io/RandomAccessFile;Lcck/elf/ELFHeader;Lcck/elf/ELFSectionHeaderTable;)Ljava/util/List;
cck/elf/ELFDataInputStream."<init>":(Lcck/elf/ELFHeader;Ljava/io/RandomAccessFile;)V
cck/elf/ELFDataInputStream.read_section:(II)[B
cck/elf/ELFDataInputStream.read_Elf32_byte:()B
cck/elf/ELFDataInputStream.read_Elf32_uchar:()I
cck/elf/ELFDataInputStream.read_Elf32_Addr:()I
cck/elf/ELFDataInputStream.read_Elf32_Half:()S
cck/elf/ELFDataInputStream.read_Elf32_Off:()I
cck/elf/ELFDataInputStream.read_Elf32_SWord:()I
cck/elf/ELFDataInputStream.read_Elf32_Word:()I
cck/elf/ELFDataInputStream.read_1:()I
cck/elf/ELFDataInputStream.read_2:()I
cck/elf/ELFDataInputStream.read_4:()I
cck/elf/ELFDataInputStream.asShort:(II)S
cck/elf/ELFDataInputStream.asInt:(IIII)I
cck/elf/ELFIdentifier."<init>":()V
cck/elf/ELFIdentifier.nm:(ILjava/lang/String;Ljava/lang/String;)I
cck/elf/ELFIdentifier.getArchitecture:(I)Ljava/lang/String;
cck/elf/ELFIdentifier.getDescription:(I)Ljava/lang/String;
cck/elf/ELFIdentifier."<clinit>":()V
avrora/arch/ArchitectureRegistry."<init>":()V
avrora/arch/ArchitectureRegistry.addArchitectures:()V
avrora/arch/ArchitectureRegistry.getArchitecture:(Ljava/lang/String;)Lavrora/arch/AbstractArchitecture;
avrora/arch/ArchitectureRegistry.class$:(Ljava/lang/String;)Ljava/lang/Class;
avrora/arch/AbstractArchitecture.getDisassembler:()Lavrora/arch/AbstractDisassembler;
avrora/arch/AbstractArchitecture.getAssembler:()Lavrora/arch/AbstractAssembler;
avrora/arch/AbstractArchitecture.getParser:()Lavrora/arch/AbstractParser;
avrora/arch/AbstractArchitecture.newInstrArray:(I)[Lavrora/arch/AbstractInstr;
avrora/arch/legacy/LegacyArchitecture."<init>":()V
avrora/arch/legacy/LegacyArchitecture.getDisassembler:()Lavrora/arch/AbstractDisassembler;
avrora/arch/legacy/LegacyArchitecture.getAssembler:()Lavrora/arch/AbstractAssembler;
avrora/arch/legacy/LegacyArchitecture.getParser:()Lavrora/arch/AbstractParser;
avrora/arch/legacy/LegacyArchitecture.newInstrArray:(I)[Lavrora/arch/AbstractInstr;
avrora/arch/legacy/LegacyArchitecture."<clinit>":()V
avrora/arch/AbstractInstr.getSize:()I
avrora/arch/AbstractInstr.getName:()Ljava/lang/String;
avrora/arch/AbstractInstr.getArchitecture:()Lavrora/arch/AbstractArchitecture;
avrora/arch/AbstractDisassembler.disassemble:(II[B)Lavrora/arch/AbstractInstr;
avrora/arch/avr/AVRArchitecture."<init>":()V
avrora/arch/avr/AVRArchitecture.getDisassembler:()Lavrora/arch/AbstractDisassembler;
avrora/arch/avr/AVRArchitecture.getAssembler:()Lavrora/arch/AbstractAssembler;
avrora/arch/avr/AVRArchitecture.getParser:()Lavrora/arch/AbstractParser;
avrora/arch/avr/AVRArchitecture.newInstrArray:(I)[Lavrora/arch/AbstractInstr;
avrora/arch/avr/AVRArchitecture."<clinit>":()V
avrora/arch/msp430/MSP430Architecture."<init>":()V
avrora/arch/msp430/MSP430Architecture.getDisassembler:()Lavrora/arch/AbstractDisassembler;
avrora/arch/msp430/MSP430Architecture.getAssembler:()Lavrora/arch/AbstractAssembler;
avrora/arch/msp430/MSP430Architecture.getParser:()Lavrora/arch/AbstractParser;
avrora/arch/msp430/MSP430Architecture.newInstrArray:(I)[Lavrora/arch/AbstractInstr;
avrora/arch/msp430/MSP430Architecture."<clinit>":()V
cck/elf/ELFProgramHeaderTable."<init>":(Lcck/elf/ELFHeader;)V
cck/elf/ELFProgramHeaderTable.read:(Ljava/io/RandomAccessFile;)V
cck/elf/ELFProgramHeaderTable.getEntry:(I)Lcck/elf/ELFProgramHeaderTable$Entry32;
cck/elf/ELFProgramHeaderTable.getType:(Lcck/elf/ELFProgramHeaderTable$Entry32;)Ljava/lang/String;
cck/elf/ELFProgramHeaderTable$Entry32."<init>":(Lcck/elf/ELFProgramHeaderTable;)V
cck/elf/ELFProgramHeaderTable$Entry32.getFlags:()Ljava/lang/String;
cck/elf/ELFProgramHeaderTable$Entry32.isLoadable:()Z
cck/elf/ELFProgramHeaderTable$Entry32.isExecutable:()Z
cck/elf/ELFSectionHeaderTable."<init>":(Lcck/elf/ELFHeader;)V
cck/elf/ELFSectionHeaderTable.read:(Ljava/io/RandomAccessFile;)V
cck/elf/ELFSectionHeaderTable.setStringTable:(Lcck/elf/ELFStringTable;)V
cck/elf/ELFSectionHeaderTable.getStringTable:()Lcck/elf/ELFStringTable;
cck/elf/ELFSectionHeaderTable.getSectionName:(I)Ljava/lang/String;
cck/elf/ELFSectionHeaderTable$Entry32."<init>":(Lcck/elf/ELFSectionHeaderTable;)V
cck/elf/ELFSectionHeaderTable$Entry32.getType:()Ljava/lang/String;
cck/elf/ELFSectionHeaderTable$Entry32.getFlags:()Ljava/lang/String;
cck/elf/ELFSectionHeaderTable$Entry32.isStringTable:()Z
cck/elf/ELFSectionHeaderTable$Entry32.isSymbolTable:()Z
cck/elf/ELFSectionHeaderTable$Entry32.getName:()Ljava/lang/String;
cck/elf/ELFStringTable."<init>":(Lcck/elf/ELFHeader;Lcck/elf/ELFSectionHeaderTable$Entry32;)V
cck/elf/ELFStringTable.read:(Ljava/io/RandomAccessFile;)V
cck/elf/ELFStringTable.getString:(I)Ljava/lang/String;
avrora/core/Program."<init>":(Lavrora/arch/AbstractArchitecture;II)V
avrora/core/Program.writeInstr:(Lavrora/arch/AbstractInstr;I)V
avrora/core/Program.readInstr:(I)Lavrora/arch/AbstractInstr;
avrora/core/Program.disassembleInstr:(I)Lavrora/arch/AbstractInstr;
avrora/core/Program.readProgramByte:(I)B
avrora/core/Program.writeProgramByte:(BI)V
avrora/core/Program.writeByteInto:(BI)V
avrora/core/Program.writeProgramBytes:([BI)V
avrora/core/Program.checkAddress:(I)V
avrora/core/Program.getNextPC:(I)I
avrora/core/Program.getIndirectEdges:(I)Ljava/util/List;
avrora/core/Program.addIndirectEdge:(II)V
avrora/core/Program.getArchitecture:()Lavrora/arch/AbstractArchitecture;
avrora/core/Program.getSourceMapping:()Lavrora/core/SourceMapping;
avrora/core/Program.setSourceMapping:(Lavrora/core/SourceMapping;)V
avrora/core/Program.getCFG:()Lavrora/core/ControlFlowGraph;
avrora/arch/legacy/LegacyInstr."<init>":(Lavrora/arch/legacy/LegacyInstrProperties;)V
avrora/arch/legacy/LegacyInstr.getOperands:()Ljava/lang/String;
avrora/arch/legacy/LegacyInstr.getVariant:()Ljava/lang/String;
avrora/arch/legacy/LegacyInstr.getSize:()I
avrora/arch/legacy/LegacyInstr.getName:()Ljava/lang/String;
avrora/arch/legacy/LegacyInstr.toString:()Ljava/lang/String;
avrora/arch/legacy/LegacyInstr.getCycles:()I
avrora/arch/legacy/LegacyInstr.asInstr:()Lavrora/arch/legacy/LegacyInstr;
avrora/arch/legacy/LegacyInstr.getArchitecture:()Lavrora/arch/AbstractArchitecture;
avrora/arch/legacy/LegacyInstr.accept:(Lavrora/arch/legacy/LegacyInstrVisitor;)V
avrora/arch/legacy/LegacyInstr.need:(I[Lavrora/arch/legacy/LegacyOperand;)V
avrora/arch/legacy/LegacyInstr.GPR:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.HGPR:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.MGPR:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.ADR:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.RDL:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.EGPR:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.YZ:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.Z:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.IMM3:(II)I
avrora/arch/legacy/LegacyInstr.IMM5:(II)I
avrora/arch/legacy/LegacyInstr.IMM6:(II)I
avrora/arch/legacy/LegacyInstr.IMM8:(II)I
avrora/arch/legacy/LegacyInstr.SREL:(III)I
avrora/arch/legacy/LegacyInstr.LREL:(III)I
avrora/arch/legacy/LegacyInstr.DADDR:(II)I
avrora/arch/legacy/LegacyInstr.PADDR:(II)I
avrora/arch/legacy/LegacyInstr.checkImm:(IIII)I
avrora/arch/legacy/LegacyInstr.checkReg:(ILavrora/arch/legacy/LegacyRegister;Lavrora/arch/legacy/LegacyRegister$Set;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.REG:(Lavrora/arch/legacy/LegacyOperand;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.IMM:(Lavrora/arch/legacy/LegacyOperand;)I
avrora/arch/legacy/LegacyInstr.WORD:(Lavrora/arch/legacy/LegacyOperand;)I
avrora/arch/legacy/LegacyInstr.access$000:(I[Lavrora/arch/legacy/LegacyOperand;)V
avrora/arch/legacy/LegacyInstr.access$100:(Lavrora/arch/legacy/LegacyOperand;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$200:(Lavrora/arch/legacy/LegacyOperand;)I
avrora/arch/legacy/LegacyInstr.access$300:(Lavrora/arch/legacy/LegacyOperand;)I
avrora/arch/legacy/LegacyInstr.access$400:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$500:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$600:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$700:()I
avrora/arch/legacy/LegacyInstr.access$800:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$900:(II)I
avrora/arch/legacy/LegacyInstr.access$1000:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$1100:()I
avrora/arch/legacy/LegacyInstr.access$1200:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$1300:(II)I
avrora/arch/legacy/LegacyInstr.access$1400:()I
avrora/arch/legacy/LegacyInstr.access$1500:(II)I
avrora/arch/legacy/LegacyInstr.access$1600:()I
avrora/arch/legacy/LegacyInstr.access$1700:(III)I
avrora/arch/legacy/LegacyInstr.access$1800:()I
avrora/arch/legacy/LegacyInstr.access$1900:(II)I
avrora/arch/legacy/LegacyInstr.access$2000:()I
avrora/arch/legacy/LegacyInstr.access$2100:(II)I
avrora/arch/legacy/LegacyInstr.access$2200:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2300:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2400:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2500:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2600:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2700:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2800:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$2900:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$3000:()I
avrora/arch/legacy/LegacyInstr.access$3100:(II)I
avrora/arch/legacy/LegacyInstr.access$3200:()Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$3300:(ILavrora/arch/legacy/LegacyRegister;)Lavrora/arch/legacy/LegacyRegister;
avrora/arch/legacy/LegacyInstr.access$3400:()I
avrora/arch/legacy/LegacyInstr.access$3500:(III)I
avrora/arch/legacy/LegacyInstr."<clinit>":()V
avrora/arch/legacy/LegacyInstrProto.build:(I[Lavrora/arch/legacy/LegacyOperand;)Lavrora/arch/legacy/LegacyInstr;
avrora/arch/legacy/LegacyInstrProto.getSize:()I
avrora/arch/legacy/LegacyInstrProto.getVariant:()Ljava/lang/String;
avrora/arch/legacy/LegacyInstrProto.getName:()Ljava/lang/String;
